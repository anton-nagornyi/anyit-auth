{"version":3,"file":"index.js","sources":["../src/addresses.ts","../src/errors/invalid-password-error.ts","../src/errors/missing-password-error.ts","../src/errors/reset-token-expired-error.ts","../src/errors/wrong-password-error.ts","../src/errors/wrong-reset-token-error.ts","../src/messages/password-auth.ts","../src/messages/change-password.ts","../src/messages/delete-password.ts","../src/messages/request-password-reset.ts","../src/messages/reset-password.ts","../src/password-rules/password-rule.ts","../src/password-rules/password-regexp-match-rule.ts","../src/password-rules/password-character-diversity-rule.ts","../src/password-rules/password-max-length-rule.ts","../src/password-rules/password-min-length-rule.ts","../src/password-rules/password-no-common-rule.ts","../src/password-rules/password-no-repeated-characters-rule.ts","../src/password-rules/password-no-sequential-characters-rule.ts"],"sourcesContent":["export const PASSWORD_ACTOR = 'password-actor-01HG7P19H8H0FHX0QRHPBEMF5D';\nexport const PASSWORD_STORE_ACTOR =\n  'password-store-actor-01HG7P1CKKZ9Z97WMR4N2AXZ8B';\nexport const PASSWORD_RESET_MESSENGER =\n  'password-reset-messenger-01HMR3BF2ZM5XX8KBZVP8T8W3M';\nexport const PASSWORD_RESET_REQUEST_MESSENGER =\n  'password-reset-request-messenger-01HMR3BTZ13DN10H8VPD7CAM2P';\n","export class InvalidPasswordError extends Error {\n  constructor(message?: string) {\n    super(message ?? 'Invalid password');\n  }\n\n  code = 'INVALID_PASSWORD_ERROR';\n}\n","export class MissingPasswordError extends Error {\n  constructor() {\n    super('Missing password');\n  }\n\n  code = 'MISSING_PASSWORD_ERROR';\n}\n","export class ResetTokenExpiredError extends Error {\n  constructor() {\n    super('Reset token expired');\n  }\n\n  code = 'RESET_TOKEN_EXPIRED';\n}\n","export class WrongPasswordError extends Error {\n  constructor() {\n    super('Wrong otp');\n  }\n\n  code = 'WRONG_PASSWORD';\n}\n","export class WrongResetTokenError extends Error {\n  constructor() {\n    super('Wrong reset token');\n  }\n\n  code = 'WRONG_RESET_TOKEN';\n}\n","import { Message, RegisterMessage, MessageArgs } from '@anyit/messaging';\n\nexport type PasswordAuthArgs = MessageArgs<PasswordAuth>;\n\n@RegisterMessage('01HBV2B6WM4YPXWFES6CS3646M')\nexport class PasswordAuth extends Message {\n  constructor(args: PasswordAuthArgs) {\n    super(args);\n    this.password = args.password;\n    this.id = args.id;\n  }\n\n  readonly id: number;\n\n  readonly password: string;\n\n  toJSON() {\n    return {\n      ...super.toJSON(),\n      password: '*****',\n    };\n  }\n}\n\nexport const isPasswordAuth = (message?: Message): message is PasswordAuth =>\n  Boolean(message && message.code === PasswordAuth.code);\n","import { RegisterMessage } from '@anyit/messaging';\nimport { PasswordAuth } from './password-auth';\n\n@RegisterMessage('01HBWPF5T9J5N2F56CWB4BJZAA')\nexport class ChangePassword extends PasswordAuth {}\n","import { Message, RegisterMessage, MessageArgs } from '@anyit/messaging';\n\nexport type DeletePasswordArgs = MessageArgs<DeletePassword>;\n\n@RegisterMessage('01HEHW5ZYS4VFY2F5BBW8FN5NV')\nexport class DeletePassword extends Message {\n  constructor(args: DeletePasswordArgs) {\n    super(args);\n    this.id = args.id;\n  }\n\n  readonly id: number;\n}\n\nexport const isDeletePassword = (\n  message?: Message,\n): message is DeletePassword =>\n  Boolean(message && message.code === DeletePassword.code);\n","import { RegisterMessage, Message, MessageArgs } from '@anyit/messaging';\n\nexport type RequestPasswordResetArgs = Omit<\n  MessageArgs<RequestPasswordReset>,\n  'resetToken'\n> & { resetToken?: string };\n\n@RegisterMessage('01HBWRJT57T9PDNPT1FXFCJ1H1')\nexport class RequestPasswordReset extends Message {\n  constructor(args: RequestPasswordResetArgs) {\n    super(args);\n    this.resetToken = args.resetToken;\n    this.id = args.id;\n  }\n\n  readonly id: number;\n\n  resetToken?: string;\n}\n\nexport const isRequestPasswordReset = (\n  message?: Message,\n): message is RequestPasswordReset =>\n  Boolean(message && message.code === RequestPasswordReset.code);\n","import { RegisterMessage, Message, MessageArgs } from '@anyit/messaging';\nimport { PasswordAuth } from './password-auth';\n\nexport type ResetPasswordArgs = MessageArgs<ResetPassword>;\n\n@RegisterMessage('01HBWP9N2D6GN3D0ES9FVD56VW')\nexport class ResetPassword extends PasswordAuth {\n  constructor(args: ResetPasswordArgs) {\n    super(args);\n    this.resetToken = args.resetToken;\n  }\n\n  readonly resetToken: string;\n}\n\nexport const isResetPassword = (message?: Message): message is ResetPassword =>\n  Boolean(message && message.code === ResetPassword.code);\n","export abstract class PasswordRule {\n  abstract validate(password: string): Promise<boolean>;\n  abstract description(): string;\n}\n","import { PasswordRule } from './password-rule';\n\nexport class PasswordRegexpMatchRule extends PasswordRule {\n  constructor(\n    readonly regExp: string | RegExp,\n    readonly customDescription = null,\n  ) {\n    super();\n  }\n\n  validate(password: string): Promise<boolean> {\n    return Promise.resolve(Boolean(password.match(this.regExp)));\n  }\n\n  description(): string {\n    return (\n      this.customDescription ??\n      `Password must match the expression ${this.regExp.toString()}`\n    );\n  }\n}\n","import { PasswordRule } from './password-rule';\nimport { PasswordRegexpMatchRule } from './password-regexp-match-rule';\n\nexport class PasswordCharacterDiversityRule extends PasswordRule {\n  private readonly regexpMatch = new PasswordRegexpMatchRule(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+[\\]{};':\",.<>/?\\\\|`~-]).*$/,\n  );\n\n  validate(password: string): Promise<boolean> {\n    return this.regexpMatch.validate(password);\n  }\n\n  description() {\n    return 'Password must include at least one uppercase letter, one lowercase letter, one number and one special character';\n  }\n}\n","import { PasswordRule } from './password-rule';\n\nexport class PasswordMaxLengthRule extends PasswordRule {\n  constructor(readonly maxLength = 64) {\n    super();\n  }\n\n  validate(password: string): Promise<boolean> {\n    return Promise.resolve(password.length < this.maxLength);\n  }\n\n  description() {\n    return `Password length must be less than ${this.maxLength}`;\n  }\n}\n","import { PasswordRule } from './password-rule';\n\nexport class PasswordMinLengthRule extends PasswordRule {\n  constructor(readonly minLength = 8) {\n    super();\n  }\n\n  validate(password: string): Promise<boolean> {\n    return Promise.resolve(password.length >= this.minLength);\n  }\n\n  description() {\n    return `Password length must be greater than ${this.minLength}`;\n  }\n}\n","import { PasswordRule } from './password-rule';\n\nconst defaultCommonPasswords = [\n  '123456',\n  'password',\n  '123456789',\n  '12345',\n  '12345678',\n  'qwerty',\n  '1234567',\n  '111111',\n  '1234567890',\n  '123123',\n  'abc123',\n  '1234',\n  'password1',\n  'iloveyou',\n  '1q2w3e4r',\n  '000000',\n  'qwerty123',\n  'zaq12wsx',\n  'dragon',\n  'sunshine',\n  'princess',\n  'letmein',\n  '654321',\n  'monkey',\n  '27653',\n  '1qaz2wsx',\n  '123321',\n  'qwertyuiop',\n  'superman',\n  'asdfghjkl',\n];\n\nexport class PasswordNoCommonRule extends PasswordRule {\n  constructor(commonPasswords = defaultCommonPasswords) {\n    super();\n\n    this.forbiddenPasswords = new Set(commonPasswords);\n  }\n\n  private readonly forbiddenPasswords: Set<string>;\n\n  validate(password: string): Promise<boolean> {\n    return Promise.resolve(!this.forbiddenPasswords.has(password));\n  }\n\n  description() {\n    return 'Commonly used passwords are not allowed';\n  }\n}\n","import { PasswordRule } from './password-rule';\n\nexport class PasswordNoRepeatedCharactersRule extends PasswordRule {\n  constructor(readonly allowedRepeats = 2) {\n    super();\n  }\n\n  validate(password: string): Promise<boolean> {\n    for (let i = 0; i < password.length - this.allowedRepeats; ++i) {\n      let series = 1;\n      for (let j = i + 1; j < i + 1 + this.allowedRepeats; ++j) {\n        if (password[i] === password[j]) {\n          ++series;\n        } else {\n          break;\n        }\n      }\n      if (series > this.allowedRepeats) {\n        return Promise.resolve(false);\n      }\n    }\n    return Promise.resolve(true);\n  }\n\n  description(): string {\n    return `Maximum allowed character repeats is ${this.allowedRepeats}`;\n  }\n}\n","import { PasswordRule } from './password-rule';\n\nexport class PasswordNoSequentialCharactersRule extends PasswordRule {\n  validate(password: string): Promise<boolean> {\n    for (let i = 0; i < password.length - 2; i++) {\n      const charCode1 = password.charCodeAt(i);\n      const charCode2 = password.charCodeAt(i + 1);\n      const charCode3 = password.charCodeAt(i + 2);\n\n      if (\n        (charCode2 === charCode1 + 1 && charCode3 === charCode2 + 1) ||\n        (charCode2 === charCode1 - 1 && charCode3 === charCode2 - 1)\n      ) {\n        return Promise.resolve(false);\n      }\n    }\n    return Promise.resolve(true);\n  }\n\n  description(): string {\n    return 'No sequential characters allowed';\n  }\n}\n"],"names":["PasswordAuth","Message","RegisterMessage","ChangePassword","DeletePassword","RequestPasswordReset","ResetPassword"],"mappings":"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"}