{"version":3,"file":"index.js","sources":["../src/messages/create-record.ts","../src/messages/delete-record.ts","../src/messages/get-next-id-incremented.ts","../src/messages/get-record.ts","../src/messages/get-records.ts","../src/messages/update-record.ts"],"sourcesContent":["import { RegisterMessage, Message, MessageArgs } from '@anyit/messaging';\n\nexport type CreateRecordArgs<T> = Omit<MessageArgs<CreateRecord<T>>, 'id'> & {\n  id?: number;\n};\n\n@RegisterMessage('01HEMD4GNN6KD26978VNBNVV77')\nexport class CreateRecord<T = Record<string, any>> extends Message {\n  constructor(args: CreateRecordArgs<T>) {\n    super(args);\n    this.record = { ...(args.record as T) };\n    this.id = args.id ?? 0;\n  }\n\n  id: number;\n\n  readonly record: Partial<T>;\n}\n\nexport const isCreateRecord = (message?: Message): message is CreateRecord =>\n  Boolean(message && message.code === CreateRecord.code);\n","import { RegisterMessage, Message, MessageArgs } from '@anyit/messaging';\n\nexport type DeleteRecordArgs<T> = MessageArgs<DeleteRecord<T>>;\n\n@RegisterMessage('01HEMDHQ9B2S29MG746HJBWMRY')\nexport class DeleteRecord<T = Record<string, any>> extends Message {\n  constructor(args: DeleteRecordArgs<T>) {\n    super(args);\n    this.filter = { ...(args.filter as T) };\n  }\n\n  readonly filter: Partial<T>;\n}\n\nexport const isDeleteRecord = (message?: Message): message is DeleteRecord =>\n  Boolean(message && message.code === DeleteRecord.code);\n","import { RegisterMessage, Message } from '@anyit/messaging';\n\n@RegisterMessage('01HEYE64BW9E2B9F8WG5N9T91K')\nexport class GetNextIdIncremented extends Message {\n  nextId = 0;\n}\n\nexport const isGetNextIdIncremented = (\n  message?: Message,\n): message is GetNextIdIncremented =>\n  Boolean(message && message.code === GetNextIdIncremented.code);\n","import { RegisterMessage, Message, MessageArgs } from '@anyit/messaging';\n\nexport type GetRecordArgs<T> = Omit<MessageArgs<GetRecord<T>>, 'record'>;\n\n@RegisterMessage('01HEMDF9ZE70C13ZJX2HM6D3WA')\nexport class GetRecord<T = Record<string, any>> extends Message {\n  constructor(args: GetRecordArgs<T>) {\n    super(args);\n    this.filter = { ...(args.filter as T) };\n  }\n\n  record: T | null = null;\n\n  readonly filter: Partial<T>;\n}\n\nexport const isGetRecord = (message?: Message): message is GetRecord =>\n  Boolean(message && message.code === GetRecord.code);\n","import { RegisterMessage, Message, MessageArgs } from '@anyit/messaging';\n\nexport type GetRecordsArgs<T> = Omit<MessageArgs<GetRecords<T>>, 'records'>;\n\n@RegisterMessage('01HES92DSGMMTZR75JDS7Y2546')\nexport class GetRecords<T = Record<string, any>> extends Message {\n  constructor(args: GetRecordsArgs<T>) {\n    super(args);\n    this.filter = { ...(args.filter as T) };\n  }\n\n  records: T[] = [];\n\n  readonly filter: Partial<T>;\n}\n\nexport const isGetRecords = (message?: Message): message is GetRecords =>\n  Boolean(message && message.code === GetRecords.code);\n","import { RegisterMessage, Message, MessageArgs } from '@anyit/messaging';\n\nexport type UpdateRecordArgs<T> = MessageArgs<UpdateRecord<T>>;\n\n@RegisterMessage('01HEMDDP102H5JM269ENA7R3M8')\nexport class UpdateRecord<T = Record<string, any>> extends Message {\n  constructor(args: UpdateRecordArgs<T>) {\n    super(args);\n    this.record = { ...(args.record as T) };\n  }\n\n  readonly record: Partial<T>;\n}\n\nexport const isUpdateRecord = (message?: Message): message is UpdateRecord =>\n  Boolean(message && message.code === UpdateRecord.code);\n"],"names":["CreateRecord","Message","RegisterMessage","DeleteRecord","GetNextIdIncremented","GetRecord","GetRecords","UpdateRecord"],"mappings":"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"}